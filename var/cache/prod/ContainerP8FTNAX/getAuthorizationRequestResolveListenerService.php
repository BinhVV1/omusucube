<?php

namespace ContainerP8FTNAX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAuthorizationRequestResolveListenerService extends Eccube_KernelProdContainer
{
    /*
     * Gets the private 'Plugin\Api42\EventListener\AuthorizationRequestResolveListener' shared autowired service.
     *
     * @return \Plugin\Api42\EventListener\AuthorizationRequestResolveListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'app'.\DIRECTORY_SEPARATOR.'Plugin'.\DIRECTORY_SEPARATOR.'Api42'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'AuthorizationRequestResolveListener.php';

        $a = ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService());

        if (isset($container->privates['Plugin\\Api42\\EventListener\\AuthorizationRequestResolveListener'])) {
            return $container->privates['Plugin\\Api42\\EventListener\\AuthorizationRequestResolveListener'];
        }
        $b = ($container->services['.container.private.form.factory'] ?? $container->load('get_Container_Private_Form_FactoryService'));

        if (isset($container->privates['Plugin\\Api42\\EventListener\\AuthorizationRequestResolveListener'])) {
            return $container->privates['Plugin\\Api42\\EventListener\\AuthorizationRequestResolveListener'];
        }

        return $container->privates['Plugin\\Api42\\EventListener\\AuthorizationRequestResolveListener'] = new \Plugin\Api42\EventListener\AuthorizationRequestResolveListener($a, $b, ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }
}
